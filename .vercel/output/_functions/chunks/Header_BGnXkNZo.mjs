import { c as createComponent, b as createAstro, r as renderTemplate, e as renderSlot, f as renderHead, g as addAttribute, d as defineScriptVars, m as maybeRenderHead } from './astro/server_V_QWApTG.mjs';
import 'kleur/colors';
import 'clsx';
/* empty css                         */

var __freeze$1 = Object.freeze;
var __defProp$1 = Object.defineProperty;
var __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, "raw", { value: __freeze$1(raw || cooked.slice()) }));
var _a$1;
const $$Astro = createAstro();
const $$Layout = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Layout;
  const { title = "CROQUERS - Reposter\xEDa Profesional", description = "Plataforma para calcular y visualizar el precio unitario de tus recetas caseras" } = Astro2.props;
  return renderTemplate(_a$1 || (_a$1 = __template$1(['<html lang="es" class="scroll-smooth" data-astro-cid-sckkx6r4> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="icon" type="image/jpeg" href="/Logo.jpg"><meta name="description"', '><meta name="generator"', "><title>", '</title><!-- Preload critical resources --><link rel="preload" href="/Logo.jpg" as="image"><!-- Meta tags for better SEO --><meta property="og:title"', '><meta property="og:description"', '><meta property="og:type" content="website"><meta name="twitter:card" content="summary_large_image"><!-- Global styles --><link rel="stylesheet" href="/src/styles/global.css">', '</head> <body class="bg-gradient-to-br from-gray-50 to-gray-100 text-gray-800 antialiased" data-astro-cid-sckkx6r4> <!-- Loading screen --> <div id="global-loading" class="fixed inset-0 bg-white z-50 flex items-center justify-center" data-astro-cid-sckkx6r4> <div class="text-center" data-astro-cid-sckkx6r4> <div class="w-20 h-20 bg-gradient-to-r from-amber-400 to-yellow-400 rounded-full flex items-center justify-center mb-4 mx-auto animate-pulse" data-astro-cid-sckkx6r4> <span class="text-3xl" data-astro-cid-sckkx6r4>\u{1F36A}</span> </div> <h2 class="text-xl font-bold text-gray-800 mb-2" data-astro-cid-sckkx6r4>CROQUERS</h2> <div class="w-32 h-2 bg-gray-200 rounded-full overflow-hidden" data-astro-cid-sckkx6r4> <div class="h-full bg-gradient-to-r from-amber-400 to-yellow-400 rounded-full animate-pulse" data-astro-cid-sckkx6r4></div> </div> <p class="text-sm text-gray-600 mt-2" data-astro-cid-sckkx6r4>Cargando plataforma...</p> </div> </div> <!-- Main content --> <div id="main-content" class="opacity-0 transition-opacity duration-500" data-astro-cid-sckkx6r4> ', " </div> <!-- Global scripts --> <script>\n      // Hide loading screen when page is ready\n      document.addEventListener('DOMContentLoaded', () => {\n        setTimeout(() => {\n          const loading = document.getElementById('global-loading');\n          const content = document.getElementById('main-content');\n          \n          if (loading && content) {\n            loading.style.opacity = '0';\n            content.style.opacity = '1';\n            \n            setTimeout(() => {\n              loading.style.display = 'none';\n            }, 500);\n          }\n        }, 1000);\n      });\n\n      // Global error handler\n      window.addEventListener('error', (e) => {\n        console.error('Global error:', e.error);\n      });\n\n      // Global utilities\n      window.CROQUERS = {\n        showToast: (message, type = 'info') => {\n          // Simple toast implementation\n          const toast = document.createElement('div');\n          toast.className = `fixed top-4 right-4 z-50 px-4 py-2 rounded-lg text-white text-sm font-medium transform translate-x-full transition-transform duration-300 ${\n            type === 'error' ? 'bg-red-500' : type === 'success' ? 'bg-green-500' : 'bg-blue-500'\n          }`;\n          toast.textContent = message;\n          document.body.appendChild(toast);\n          \n          setTimeout(() => toast.style.transform = 'translateX(0)', 100);\n          setTimeout(() => {\n            toast.style.transform = 'translateX(full)';\n            setTimeout(() => document.body.removeChild(toast), 300);\n          }, 3000);\n        }\n      };\n    <\/script> </body> </html>"], ['<html lang="es" class="scroll-smooth" data-astro-cid-sckkx6r4> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="icon" type="image/jpeg" href="/Logo.jpg"><meta name="description"', '><meta name="generator"', "><title>", '</title><!-- Preload critical resources --><link rel="preload" href="/Logo.jpg" as="image"><!-- Meta tags for better SEO --><meta property="og:title"', '><meta property="og:description"', '><meta property="og:type" content="website"><meta name="twitter:card" content="summary_large_image"><!-- Global styles --><link rel="stylesheet" href="/src/styles/global.css">', '</head> <body class="bg-gradient-to-br from-gray-50 to-gray-100 text-gray-800 antialiased" data-astro-cid-sckkx6r4> <!-- Loading screen --> <div id="global-loading" class="fixed inset-0 bg-white z-50 flex items-center justify-center" data-astro-cid-sckkx6r4> <div class="text-center" data-astro-cid-sckkx6r4> <div class="w-20 h-20 bg-gradient-to-r from-amber-400 to-yellow-400 rounded-full flex items-center justify-center mb-4 mx-auto animate-pulse" data-astro-cid-sckkx6r4> <span class="text-3xl" data-astro-cid-sckkx6r4>\u{1F36A}</span> </div> <h2 class="text-xl font-bold text-gray-800 mb-2" data-astro-cid-sckkx6r4>CROQUERS</h2> <div class="w-32 h-2 bg-gray-200 rounded-full overflow-hidden" data-astro-cid-sckkx6r4> <div class="h-full bg-gradient-to-r from-amber-400 to-yellow-400 rounded-full animate-pulse" data-astro-cid-sckkx6r4></div> </div> <p class="text-sm text-gray-600 mt-2" data-astro-cid-sckkx6r4>Cargando plataforma...</p> </div> </div> <!-- Main content --> <div id="main-content" class="opacity-0 transition-opacity duration-500" data-astro-cid-sckkx6r4> ', " </div> <!-- Global scripts --> <script>\n      // Hide loading screen when page is ready\n      document.addEventListener('DOMContentLoaded', () => {\n        setTimeout(() => {\n          const loading = document.getElementById('global-loading');\n          const content = document.getElementById('main-content');\n          \n          if (loading && content) {\n            loading.style.opacity = '0';\n            content.style.opacity = '1';\n            \n            setTimeout(() => {\n              loading.style.display = 'none';\n            }, 500);\n          }\n        }, 1000);\n      });\n\n      // Global error handler\n      window.addEventListener('error', (e) => {\n        console.error('Global error:', e.error);\n      });\n\n      // Global utilities\n      window.CROQUERS = {\n        showToast: (message, type = 'info') => {\n          // Simple toast implementation\n          const toast = document.createElement('div');\n          toast.className = \\`fixed top-4 right-4 z-50 px-4 py-2 rounded-lg text-white text-sm font-medium transform translate-x-full transition-transform duration-300 \\${\n            type === 'error' ? 'bg-red-500' : type === 'success' ? 'bg-green-500' : 'bg-blue-500'\n          }\\`;\n          toast.textContent = message;\n          document.body.appendChild(toast);\n          \n          setTimeout(() => toast.style.transform = 'translateX(0)', 100);\n          setTimeout(() => {\n            toast.style.transform = 'translateX(full)';\n            setTimeout(() => document.body.removeChild(toast), 300);\n          }, 3000);\n        }\n      };\n    <\/script> </body> </html>"])), addAttribute(description, "content"), addAttribute(Astro2.generator, "content"), title, addAttribute(title, "content"), addAttribute(description, "content"), renderHead(), renderSlot($$result, $$slots["default"]));
}, "D:/CROQUER/y/src/layouts/Layout.astro", void 0);

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Sidebar = createComponent(async ($$result, $$props, $$slots) => {
  const BACKEND_URL = "https://myrecipebook-d7cg.onrender.com";
  return renderTemplate(_a || (_a = __template(["<!-- Mobile menu button -->", '<button id="mobile-menu-button" class="lg:hidden fixed top-4 left-4 z-50 w-12 h-12 bg-gradient-to-r from-gray-900 to-gray-800 text-white rounded-xl shadow-xl flex items-center justify-center hover:scale-110 transition-all duration-300 border-2 border-amber-400"> <span id="menu-icon" class="text-amber-400 text-lg">‚ò∞</span> </button> <!-- Overlay for mobile --> <div id="mobile-overlay" class="lg:hidden fixed inset-0 bg-black/60 backdrop-blur-md z-40 hidden transition-opacity duration-300"></div> <!-- Sidebar --> <aside id="sidebar" class="fixed left-0 top-0 h-full w-80 bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900 text-white shadow-2xl z-40 transform -translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out"> <!-- Header --> <div class="relative p-6 border-b border-gray-700"> <div class="flex items-center justify-between"> <div class="flex items-center space-x-3"> <div class="w-12 h-12 bg-gradient-to-r from-amber-400 to-yellow-400 rounded-xl flex items-center justify-center shadow-lg"> <span class="text-gray-900 text-xl font-bold">üç™</span> </div> <div> <h1 class="text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-amber-300 to-yellow-300">\nCROQUERS\n</h1> <p class="text-xs text-gray-400">Reposter√≠a Profesional</p> </div> </div> <!-- Close button for mobile --> <button id="close-sidebar" class="lg:hidden w-8 h-8 text-gray-400 hover:text-white transition-colors">\n‚úï\n</button> </div> <!-- Decorative line --> <div class="absolute bottom-0 left-6 right-6 h-px bg-gradient-to-r from-transparent via-amber-400 to-transparent"></div> </div> <!-- Navigation --> <nav class="flex-1 p-6 space-y-2 overflow-y-auto"> <!-- Home --> <a href="/" class="flex items-center space-x-3 px-4 py-3 rounded-xl hover:bg-white/10 transition-all duration-200 group"> <span class="text-xl group-hover:scale-110 transition-transform">üè†</span> <span class="font-medium">Inicio</span> </a> <!-- Featured Recipe --> <a href="/recetas/chocolate" class="flex items-center space-x-3 px-4 py-3 rounded-xl hover:bg-white/10 transition-all duration-200 group bg-amber-500/20 border border-amber-500/30"> <span class="text-xl group-hover:scale-110 transition-transform">üç´</span> <div class="flex-1"> <span class="font-medium text-amber-200">Galletas de Chocolate</span> <div class="text-xs text-amber-300/80">Receta destacada</div> </div> <span class="text-amber-300 text-xs bg-amber-500/30 px-2 py-1 rounded-full">Popular</span> </a> <!-- Recipes Section --> <div class="pt-4"> <div class="flex items-center justify-between px-4 py-2 mb-2"> <div class="flex items-center space-x-2"> <span class="text-lg">üìñ</span> <span class="font-semibold text-amber-200">Mis Recetas</span> </div> <div id="recetas-count" class="text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded-full">\n0\n</div> </div> <ul id="recetas-lista" class="space-y-1 ml-2"> <li class="px-4 py-2 text-gray-400 italic text-sm flex items-center space-x-2"> <div class="w-4 h-4 border-2 border-amber-400 border-t-transparent rounded-full animate-spin"></div> <span>Cargando recetas...</span> </li> </ul> </div> <!-- Status indicator --> <div id="sidebar-status" class="hidden mt-6 mx-4 p-3 rounded-xl text-xs"> <div class="flex items-center space-x-2"> <div id="status-indicator" class="w-2 h-2 rounded-full"></div> <span id="status-text"></span> </div> </div> </nav> <!-- Footer --> <div class="p-6 border-t border-gray-700"> <div class="text-center"> <p class="text-xs text-gray-400 mb-2">Versi√≥n 1.0.0</p> <div class="flex justify-center space-x-4 text-xs text-gray-500"> <a href="#" class="hover:text-amber-300 transition-colors">Ayuda</a> <span>‚Ä¢</span> <a href="#" class="hover:text-amber-300 transition-colors">Soporte</a> </div> </div> </div> </aside> <script>(function(){', "\n  document.addEventListener('DOMContentLoaded', async () => {\n    const sidebar = document.getElementById('sidebar');\n    const mobileMenuButton = document.getElementById('mobile-menu-button');\n    const closeSidebar = document.getElementById('close-sidebar');\n    const mobileOverlay = document.getElementById('mobile-overlay');\n    const menuIcon = document.getElementById('menu-icon');\n    \n    const ul = document.getElementById('recetas-lista');\n    const statusDiv = document.getElementById('sidebar-status');\n    const statusText = document.getElementById('status-text');\n    const statusIndicator = document.getElementById('status-indicator');    const recetasCount = document.getElementById('recetas-count');\n    // BACKEND_URL ya est√° disponible desde define:vars\n\n    // Mobile menu functionality\n    function toggleSidebar() {\n      const isOpen = !sidebar.classList.contains('-translate-x-full');\n      \n      if (isOpen) {\n        sidebar.classList.add('-translate-x-full');\n        mobileOverlay.classList.add('hidden');\n        menuIcon.textContent = '‚ò∞';\n      } else {\n        sidebar.classList.remove('-translate-x-full');\n        mobileOverlay.classList.remove('hidden');\n        menuIcon.textContent = '‚úï';\n      }\n    }\n\n    mobileMenuButton?.addEventListener('click', toggleSidebar);\n    closeSidebar?.addEventListener('click', toggleSidebar);\n    mobileOverlay?.addEventListener('click', toggleSidebar);\n\n    // Close sidebar on escape key\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && !sidebar.classList.contains('-translate-x-full')) {\n        toggleSidebar();\n      }\n    });\n\n    // Status functions\n    function showStatus(message, type = 'info') {\n      if (statusDiv && statusText && statusIndicator) {\n        statusText.textContent = message;\n        \n        const colors = {\n          info: 'bg-blue-500/20 text-blue-300 border-blue-500/30',\n          success: 'bg-green-500/20 text-green-300 border-green-500/30',\n          error: 'bg-red-500/20 text-red-300 border-red-500/30'\n        };\n        \n        const indicatorColors = {\n          info: 'bg-blue-400',\n          success: 'bg-green-400',\n          error: 'bg-red-400'\n        };\n        \n        statusDiv.className = `mt-6 mx-4 p-3 rounded-xl text-xs border ${colors[type]}`;\n        statusIndicator.className = `w-2 h-2 rounded-full ${indicatorColors[type]}`;\n        statusDiv.classList.remove('hidden');\n      }\n    }\n\n    function hideStatus() {\n      statusDiv?.classList.add('hidden');\n    }\n\n    function updateRecetasCount(count) {\n      if (recetasCount) {\n        recetasCount.textContent = count.toString();\n      }\n    }\n\n    // Loading functions\n    function showLoading() {\n      ul.innerHTML = `\n        <li class=\"px-4 py-2 text-gray-400 italic text-sm flex items-center space-x-2\">\n          <div class=\"w-4 h-4 border-2 border-amber-400 border-t-transparent rounded-full animate-spin\"></div>\n          <span>Cargando recetas...</span>\n        </li>\n      `;\n      showStatus('Conectando con servidor...', 'info');\n    }\n\n    function showError(message) {\n      ul.innerHTML = `\n        <li class=\"px-4 py-2 text-red-400 text-sm flex items-center space-x-2\">\n          <span class=\"text-red-500\">‚ö†Ô∏è</span>\n          <span>${message}</span>\n        </li>\n      `;\n      showStatus('Error de conexi√≥n', 'error');\n      updateRecetasCount(0);\n    }\n\n    // API functions\n    async function loadRecetasFromAPI() {\n      try {\n        showStatus('Cargando desde servidor...', 'info');\n        const res = await fetch(`${BACKEND_URL}/api/recetas`);\n        if (!res.ok) {\n          throw new Error(`Error del servidor: ${res.status}`);\n        }\n        const data = await res.json();\n        if (!Array.isArray(data)) {\n          throw new Error('Formato de datos inv√°lido');\n        }\n        showStatus('Conectado al servidor', 'success');\n        setTimeout(hideStatus, 3000);\n        return data;\n      } catch (err) {\n        console.error('Error al cargar desde API:', err);\n        throw err;\n      }\n    }\n\n    async function loadRecetasFromFile() {\n      try {\n        showStatus('Usando datos locales...', 'info');\n        const res = await fetch('/recetas.json');\n        if (!res.ok) {\n          throw new Error(`Error al cargar archivo local: ${res.status}`);\n        }\n        const data = await res.json();\n        showStatus('Datos locales cargados', 'success');\n        setTimeout(hideStatus, 3000);\n        return data;\n      } catch (err) {\n        console.error('Error al cargar desde archivo:', err);\n        throw err;\n      }\n    }\n\n    // Main loading logic\n    let recetas = [];\n    \n    // Try localStorage first\n    try {\n      const cached = localStorage.getItem('recetas');\n      if (cached) {\n        recetas = JSON.parse(cached);\n        if (Array.isArray(recetas) && recetas.length > 0) {\n          showStatus('Usando cach√© local', 'success');\n          setTimeout(hideStatus, 2000);\n        }\n      }\n    } catch (err) {\n      console.warn('Error al leer localStorage:', err);\n    }\n\n    // Load from API or file if no cache\n    if (!recetas || !Array.isArray(recetas) || recetas.length === 0) {\n      showLoading();\n      \n      try {\n        recetas = await loadRecetasFromAPI();\n        localStorage.setItem('recetas', JSON.stringify(recetas));\n      } catch (apiError) {\n        try {\n          console.log('API fall√≥, intentando cargar desde archivo local...');\n          recetas = await loadRecetasFromFile();\n          localStorage.setItem('recetas', JSON.stringify(recetas));\n        } catch (fileError) {\n          showError('No se pudieron cargar las recetas');\n          return;\n        }\n      }\n    }\n\n    // Render recipes\n    if (!recetas || recetas.length === 0) {\n      ul.innerHTML = `\n        <li class=\"px-4 py-2 text-gray-400 italic text-sm flex items-center space-x-2\">\n          <span>üìù</span>\n          <span>No hay recetas disponibles</span>\n        </li>\n      `;\n      showStatus('Sin recetas disponibles', 'error');\n      updateRecetasCount(0);\n      return;\n    }\n\n    const validRecetas = recetas.filter(r => r && r.id && r.nombre);\n    \n    if (validRecetas.length === 0) {\n      ul.innerHTML = `\n        <li class=\"px-4 py-2 text-gray-400 italic text-sm flex items-center space-x-2\">\n          <span>‚ö†Ô∏è</span>\n          <span>No hay recetas v√°lidas</span>\n        </li>\n      `;\n      showStatus('Datos inv√°lidos', 'error');\n      updateRecetasCount(0);\n    } else {\n      const items = validRecetas.map(r => `\n        <li>\n          <a\n            href=\"/recetas/${encodeURIComponent(r.id)}\"\n            class=\"flex items-center space-x-3 px-4 py-2 rounded-lg hover:bg-white/10 transition-all duration-200 group text-sm\"\n            title=\"Ver receta: ${r.nombre}\"\n          >\n            <span class=\"text-base group-hover:scale-110 transition-transform\">üçΩÔ∏è</span>\n            <span class=\"text-gray-300 group-hover:text-white transition-colors\">${r.nombre}</span>\n          </a>\n        </li>\n      `).join('');\n\n      ul.innerHTML = items;\n      updateRecetasCount(validRecetas.length);\n      \n      if (statusDiv.classList.contains('hidden')) {\n        showStatus(`${validRecetas.length} recetas cargadas`, 'success');\n        setTimeout(hideStatus, 2000);\n      }\n    }\n  });\n})();</script>"], ["<!-- Mobile menu button -->", '<button id="mobile-menu-button" class="lg:hidden fixed top-4 left-4 z-50 w-12 h-12 bg-gradient-to-r from-gray-900 to-gray-800 text-white rounded-xl shadow-xl flex items-center justify-center hover:scale-110 transition-all duration-300 border-2 border-amber-400"> <span id="menu-icon" class="text-amber-400 text-lg">‚ò∞</span> </button> <!-- Overlay for mobile --> <div id="mobile-overlay" class="lg:hidden fixed inset-0 bg-black/60 backdrop-blur-md z-40 hidden transition-opacity duration-300"></div> <!-- Sidebar --> <aside id="sidebar" class="fixed left-0 top-0 h-full w-80 bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900 text-white shadow-2xl z-40 transform -translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out"> <!-- Header --> <div class="relative p-6 border-b border-gray-700"> <div class="flex items-center justify-between"> <div class="flex items-center space-x-3"> <div class="w-12 h-12 bg-gradient-to-r from-amber-400 to-yellow-400 rounded-xl flex items-center justify-center shadow-lg"> <span class="text-gray-900 text-xl font-bold">üç™</span> </div> <div> <h1 class="text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-amber-300 to-yellow-300">\nCROQUERS\n</h1> <p class="text-xs text-gray-400">Reposter√≠a Profesional</p> </div> </div> <!-- Close button for mobile --> <button id="close-sidebar" class="lg:hidden w-8 h-8 text-gray-400 hover:text-white transition-colors">\n‚úï\n</button> </div> <!-- Decorative line --> <div class="absolute bottom-0 left-6 right-6 h-px bg-gradient-to-r from-transparent via-amber-400 to-transparent"></div> </div> <!-- Navigation --> <nav class="flex-1 p-6 space-y-2 overflow-y-auto"> <!-- Home --> <a href="/" class="flex items-center space-x-3 px-4 py-3 rounded-xl hover:bg-white/10 transition-all duration-200 group"> <span class="text-xl group-hover:scale-110 transition-transform">üè†</span> <span class="font-medium">Inicio</span> </a> <!-- Featured Recipe --> <a href="/recetas/chocolate" class="flex items-center space-x-3 px-4 py-3 rounded-xl hover:bg-white/10 transition-all duration-200 group bg-amber-500/20 border border-amber-500/30"> <span class="text-xl group-hover:scale-110 transition-transform">üç´</span> <div class="flex-1"> <span class="font-medium text-amber-200">Galletas de Chocolate</span> <div class="text-xs text-amber-300/80">Receta destacada</div> </div> <span class="text-amber-300 text-xs bg-amber-500/30 px-2 py-1 rounded-full">Popular</span> </a> <!-- Recipes Section --> <div class="pt-4"> <div class="flex items-center justify-between px-4 py-2 mb-2"> <div class="flex items-center space-x-2"> <span class="text-lg">üìñ</span> <span class="font-semibold text-amber-200">Mis Recetas</span> </div> <div id="recetas-count" class="text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded-full">\n0\n</div> </div> <ul id="recetas-lista" class="space-y-1 ml-2"> <li class="px-4 py-2 text-gray-400 italic text-sm flex items-center space-x-2"> <div class="w-4 h-4 border-2 border-amber-400 border-t-transparent rounded-full animate-spin"></div> <span>Cargando recetas...</span> </li> </ul> </div> <!-- Status indicator --> <div id="sidebar-status" class="hidden mt-6 mx-4 p-3 rounded-xl text-xs"> <div class="flex items-center space-x-2"> <div id="status-indicator" class="w-2 h-2 rounded-full"></div> <span id="status-text"></span> </div> </div> </nav> <!-- Footer --> <div class="p-6 border-t border-gray-700"> <div class="text-center"> <p class="text-xs text-gray-400 mb-2">Versi√≥n 1.0.0</p> <div class="flex justify-center space-x-4 text-xs text-gray-500"> <a href="#" class="hover:text-amber-300 transition-colors">Ayuda</a> <span>‚Ä¢</span> <a href="#" class="hover:text-amber-300 transition-colors">Soporte</a> </div> </div> </div> </aside> <script>(function(){', "\n  document.addEventListener('DOMContentLoaded', async () => {\n    const sidebar = document.getElementById('sidebar');\n    const mobileMenuButton = document.getElementById('mobile-menu-button');\n    const closeSidebar = document.getElementById('close-sidebar');\n    const mobileOverlay = document.getElementById('mobile-overlay');\n    const menuIcon = document.getElementById('menu-icon');\n    \n    const ul = document.getElementById('recetas-lista');\n    const statusDiv = document.getElementById('sidebar-status');\n    const statusText = document.getElementById('status-text');\n    const statusIndicator = document.getElementById('status-indicator');    const recetasCount = document.getElementById('recetas-count');\n    // BACKEND_URL ya est√° disponible desde define:vars\n\n    // Mobile menu functionality\n    function toggleSidebar() {\n      const isOpen = !sidebar.classList.contains('-translate-x-full');\n      \n      if (isOpen) {\n        sidebar.classList.add('-translate-x-full');\n        mobileOverlay.classList.add('hidden');\n        menuIcon.textContent = '‚ò∞';\n      } else {\n        sidebar.classList.remove('-translate-x-full');\n        mobileOverlay.classList.remove('hidden');\n        menuIcon.textContent = '‚úï';\n      }\n    }\n\n    mobileMenuButton?.addEventListener('click', toggleSidebar);\n    closeSidebar?.addEventListener('click', toggleSidebar);\n    mobileOverlay?.addEventListener('click', toggleSidebar);\n\n    // Close sidebar on escape key\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && !sidebar.classList.contains('-translate-x-full')) {\n        toggleSidebar();\n      }\n    });\n\n    // Status functions\n    function showStatus(message, type = 'info') {\n      if (statusDiv && statusText && statusIndicator) {\n        statusText.textContent = message;\n        \n        const colors = {\n          info: 'bg-blue-500/20 text-blue-300 border-blue-500/30',\n          success: 'bg-green-500/20 text-green-300 border-green-500/30',\n          error: 'bg-red-500/20 text-red-300 border-red-500/30'\n        };\n        \n        const indicatorColors = {\n          info: 'bg-blue-400',\n          success: 'bg-green-400',\n          error: 'bg-red-400'\n        };\n        \n        statusDiv.className = \\`mt-6 mx-4 p-3 rounded-xl text-xs border \\${colors[type]}\\`;\n        statusIndicator.className = \\`w-2 h-2 rounded-full \\${indicatorColors[type]}\\`;\n        statusDiv.classList.remove('hidden');\n      }\n    }\n\n    function hideStatus() {\n      statusDiv?.classList.add('hidden');\n    }\n\n    function updateRecetasCount(count) {\n      if (recetasCount) {\n        recetasCount.textContent = count.toString();\n      }\n    }\n\n    // Loading functions\n    function showLoading() {\n      ul.innerHTML = \\`\n        <li class=\"px-4 py-2 text-gray-400 italic text-sm flex items-center space-x-2\">\n          <div class=\"w-4 h-4 border-2 border-amber-400 border-t-transparent rounded-full animate-spin\"></div>\n          <span>Cargando recetas...</span>\n        </li>\n      \\`;\n      showStatus('Conectando con servidor...', 'info');\n    }\n\n    function showError(message) {\n      ul.innerHTML = \\`\n        <li class=\"px-4 py-2 text-red-400 text-sm flex items-center space-x-2\">\n          <span class=\"text-red-500\">‚ö†Ô∏è</span>\n          <span>\\${message}</span>\n        </li>\n      \\`;\n      showStatus('Error de conexi√≥n', 'error');\n      updateRecetasCount(0);\n    }\n\n    // API functions\n    async function loadRecetasFromAPI() {\n      try {\n        showStatus('Cargando desde servidor...', 'info');\n        const res = await fetch(\\`\\${BACKEND_URL}/api/recetas\\`);\n        if (!res.ok) {\n          throw new Error(\\`Error del servidor: \\${res.status}\\`);\n        }\n        const data = await res.json();\n        if (!Array.isArray(data)) {\n          throw new Error('Formato de datos inv√°lido');\n        }\n        showStatus('Conectado al servidor', 'success');\n        setTimeout(hideStatus, 3000);\n        return data;\n      } catch (err) {\n        console.error('Error al cargar desde API:', err);\n        throw err;\n      }\n    }\n\n    async function loadRecetasFromFile() {\n      try {\n        showStatus('Usando datos locales...', 'info');\n        const res = await fetch('/recetas.json');\n        if (!res.ok) {\n          throw new Error(\\`Error al cargar archivo local: \\${res.status}\\`);\n        }\n        const data = await res.json();\n        showStatus('Datos locales cargados', 'success');\n        setTimeout(hideStatus, 3000);\n        return data;\n      } catch (err) {\n        console.error('Error al cargar desde archivo:', err);\n        throw err;\n      }\n    }\n\n    // Main loading logic\n    let recetas = [];\n    \n    // Try localStorage first\n    try {\n      const cached = localStorage.getItem('recetas');\n      if (cached) {\n        recetas = JSON.parse(cached);\n        if (Array.isArray(recetas) && recetas.length > 0) {\n          showStatus('Usando cach√© local', 'success');\n          setTimeout(hideStatus, 2000);\n        }\n      }\n    } catch (err) {\n      console.warn('Error al leer localStorage:', err);\n    }\n\n    // Load from API or file if no cache\n    if (!recetas || !Array.isArray(recetas) || recetas.length === 0) {\n      showLoading();\n      \n      try {\n        recetas = await loadRecetasFromAPI();\n        localStorage.setItem('recetas', JSON.stringify(recetas));\n      } catch (apiError) {\n        try {\n          console.log('API fall√≥, intentando cargar desde archivo local...');\n          recetas = await loadRecetasFromFile();\n          localStorage.setItem('recetas', JSON.stringify(recetas));\n        } catch (fileError) {\n          showError('No se pudieron cargar las recetas');\n          return;\n        }\n      }\n    }\n\n    // Render recipes\n    if (!recetas || recetas.length === 0) {\n      ul.innerHTML = \\`\n        <li class=\"px-4 py-2 text-gray-400 italic text-sm flex items-center space-x-2\">\n          <span>üìù</span>\n          <span>No hay recetas disponibles</span>\n        </li>\n      \\`;\n      showStatus('Sin recetas disponibles', 'error');\n      updateRecetasCount(0);\n      return;\n    }\n\n    const validRecetas = recetas.filter(r => r && r.id && r.nombre);\n    \n    if (validRecetas.length === 0) {\n      ul.innerHTML = \\`\n        <li class=\"px-4 py-2 text-gray-400 italic text-sm flex items-center space-x-2\">\n          <span>‚ö†Ô∏è</span>\n          <span>No hay recetas v√°lidas</span>\n        </li>\n      \\`;\n      showStatus('Datos inv√°lidos', 'error');\n      updateRecetasCount(0);\n    } else {\n      const items = validRecetas.map(r => \\`\n        <li>\n          <a\n            href=\"/recetas/\\${encodeURIComponent(r.id)}\"\n            class=\"flex items-center space-x-3 px-4 py-2 rounded-lg hover:bg-white/10 transition-all duration-200 group text-sm\"\n            title=\"Ver receta: \\${r.nombre}\"\n          >\n            <span class=\"text-base group-hover:scale-110 transition-transform\">üçΩÔ∏è</span>\n            <span class=\"text-gray-300 group-hover:text-white transition-colors\">\\${r.nombre}</span>\n          </a>\n        </li>\n      \\`).join('');\n\n      ul.innerHTML = items;\n      updateRecetasCount(validRecetas.length);\n      \n      if (statusDiv.classList.contains('hidden')) {\n        showStatus(\\`\\${validRecetas.length} recetas cargadas\\`, 'success');\n        setTimeout(hideStatus, 2000);\n      }\n    }\n  });\n})();</script>"])), maybeRenderHead(), defineScriptVars({ BACKEND_URL }));
}, "D:/CROQUER/y/src/components/Sidebar.astro", void 0);

const $$Header = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<header class="sticky top-0 z-40 bg-white/90 backdrop-blur-sm border-b border-gray-200 shadow-sm mb-6"> <div class="px-4 sm:px-6 py-4"> <div class="flex items-center justify-between"> <!-- Logo y t√≠tulo --> <div class="flex items-center space-x-3 sm:space-x-4"> <div class="w-10 h-10 sm:w-12 sm:h-12 bg-gradient-to-br from-amber-400 to-yellow-500 rounded-xl flex items-center justify-center shadow-lg"> <span class="text-xl sm:text-2xl">üßÅ</span> </div> <div class="min-w-0"> <h1 class="text-lg sm:text-2xl font-bold text-gray-900 truncate">Creador de Recetas</h1> <p class="text-xs sm:text-sm text-gray-600 hidden sm:block">Dise√±a, calcula y optimiza tus recetas</p> <p class="text-xs text-gray-600 sm:hidden">Dise√±a y calcula</p> </div> </div> <!-- Indicadores de estado --> <div class="flex items-center space-x-2 sm:space-x-4"> <div class="hidden sm:flex items-center space-x-2 bg-green-50 text-green-700 px-3 py-1 rounded-full text-sm"> <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div> <span>Sistema activo</span> </div> <!-- Status indicator for mobile --> <div class="sm:hidden w-3 h-3 bg-green-500 rounded-full animate-pulse"></div> <!-- Breadcrumb simple --> <nav class="hidden lg:flex items-center space-x-2 text-sm text-gray-500"> <span>üè†</span> <span>/</span> <span class="text-gray-900 font-medium">Inicio</span> </nav> </div> </div> </div> <!-- Barra decorativa --> <div class="h-1 bg-gradient-to-r from-amber-400 via-yellow-500 to-amber-400"></div> </header>`;
}, "D:/CROQUER/y/src/components/Header.astro", void 0);

export { $$Layout as $, $$Sidebar as a, $$Header as b };
