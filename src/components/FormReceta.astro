---
// src/components/FormReceta.astro
const BACKEND_URL = import.meta.env.BACKEND_URL || 'http://127.0.0.1:3000';
---
<div class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-4 sm:py-8">
  <div class="max-w-4xl mx-auto px-3 sm:px-4">
    <form id="recipe-form" class="bg-white rounded-xl sm:rounded-2xl shadow-2xl border border-gray-200 overflow-hidden">
      <!-- Header del formulario -->
      <div class="bg-gradient-to-r from-gray-900 to-gray-800 px-4 sm:px-8 py-4 sm:py-6">
        <div class="flex items-center space-x-3">
          <div class="w-8 h-8 sm:w-10 sm:h-10 bg-amber-400 rounded-full flex items-center justify-center">
            <span class="text-gray-900 text-lg sm:text-xl">🧁</span>
          </div>
          <div>
            <h2 class="text-xl sm:text-2xl font-bold text-white">Crear Nueva Receta</h2>
            <p class="text-gray-300 text-xs sm:text-sm">Diseña tu próxima creación culinaria</p>
          </div>
        </div>
      </div>

      <div class="p-4 sm:p-8 space-y-6 sm:space-y-8">
        <!-- Descripción general -->
        <div class="space-y-2">
          <label for="descripcion" class="block text-sm font-semibold text-gray-700 flex items-center space-x-2">
            <span>📝</span>
            <span>Descripción de la receta</span>
          </label>
          <textarea
            id="descripcion"
            name="descripcion"
            rows="3"
            class="w-full border-2 border-gray-200 rounded-xl px-3 sm:px-4 py-2 sm:py-3 focus:border-amber-400 focus:ring-4 focus:ring-amber-100 transition-all duration-200 resize-none text-sm"
            placeholder="Describe tu deliciosa creación... ¿Qué la hace especial?"
            required
          ></textarea>
        </div>

        <!-- Nombre -->
        <div class="space-y-2">
          <label for="nombre" class="block text-sm font-semibold text-gray-700 flex items-center space-x-2">
            <span>🏷️</span>
            <span>Nombre de la receta</span>
          </label>
          <input
            id="nombre"
            name="nombre"
            required
            class="w-full border-2 border-gray-200 rounded-xl px-3 sm:px-4 py-2 sm:py-3 focus:border-amber-400 focus:ring-4 focus:ring-amber-100 transition-all duration-200 text-sm"
            placeholder="Ej: Brownie de chocolate premium"
          />
        </div>

        <!-- Ingredientes -->
        <div class="space-y-4">
          <div class="flex items-center justify-between">
            <div>
              <h3 class="text-base sm:text-lg font-bold text-gray-800 flex items-center space-x-2">
                <span>🥄</span>
                <span>Ingredientes</span>
              </h3>
              <p class="text-xs sm:text-sm text-gray-600 mt-1">
                Especifica cantidad total, unidad, precio total (Bs.) y cantidad para 10 unidades
              </p>
            </div>
          </div>

          <fieldset id="ingredients" class="space-y-4">
            <!-- Fila de ejemplo -->
            <div class="ingredient bg-gray-50 rounded-xl p-3 sm:p-4 border-2 border-dashed border-gray-200 hover:border-amber-300 transition-colors">
              <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-6 gap-3">
                <input
                  name="ingrediente-nombre"
                  required
                  placeholder="Nombre del ingrediente"
                  class="sm:col-span-2 lg:col-span-2 border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all"
                />
                <input
                  name="ingrediente-cantidad-total"
                  type="text"
                  required
                  placeholder="1 kg"
                  class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all"
                />
                <input
                  name="ingrediente-unidad"
                  type="text"
                  required
                  placeholder="g, kg, ml"
                  class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all"
                />
                <input
                  name="ingrediente-precio"
                  type="number"
                  step="0.01"
                  required
                  placeholder="Precio Bs."
                  class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all"
                />
                <div class="flex space-x-2 sm:col-span-2 lg:col-span-1">
                  <input
                    name="ingrediente-usado"                    type="number"
                    step="0.01"
                    required
                    placeholder="Usado"
                    class="flex-1 border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all"
                  />
                  <button
                    type="button"
                    class="remove w-10 h-10 bg-red-500 hover:bg-red-600 text-white rounded-lg transition-colors flex items-center justify-center"
                    title="Eliminar ingrediente"
                  >✕</button>
                </div>
              </div>
            </div>
          </fieldset>

          <button
            type="button"
            id="add-ingredient"
            class="w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white py-3 px-4 sm:px-6 rounded-xl font-semibold transition-all duration-200 flex items-center justify-center space-x-2 shadow-lg hover:shadow-xl text-sm sm:text-base"
          >
            <span class="text-lg">+</span>
            <span>Agregar Ingrediente</span>
          </button>
        </div>

        <!-- Botones de acción -->
        <div class="flex flex-col space-y-3 pt-6 border-t border-gray-200">
          <button 
            type="submit" 
            class="w-full bg-gradient-to-r from-gray-900 to-gray-800 hover:from-gray-800 hover:to-gray-700 text-white py-3 sm:py-4 px-4 sm:px-6 rounded-xl font-bold transition-all duration-200 flex items-center justify-center space-x-2 shadow-lg hover:shadow-xl text-sm sm:text-base"
          >
            <span>🎂</span>
            <span>Crear Receta</span>
          </button>
          <button 
            type="reset" 
            class="w-full bg-gray-500 hover:bg-gray-600 text-white py-3 sm:py-4 px-4 sm:px-6 rounded-xl font-semibold transition-all duration-200 flex items-center justify-center space-x-2 text-sm sm:text-base"
          >
            <span>🗑️</span>
            <span>Limpiar</span>
          </button>
        </div>

        <div id="form-status" class="hidden mt-4 p-4 rounded-xl text-sm font-medium"></div>
      </div>
    </form>
  </div>
</div>

<script type="module" define:vars={{ BACKEND_URL }}>
  // Helpers
  const slugify = txt =>
    txt.trim().toLowerCase()
      .normalize('NFD').replace(/[\u0300-\u036f]/g, '')
      .replace(/[^\w\s-]/g, '').replace(/\s+/g, '-');

  const showStatus = (msg, isErr = false) => {
    const s = document.getElementById('form-status');
    s.textContent = msg;
    s.className = `mt-4 p-4 rounded-xl text-sm font-medium ${
      isErr ? 'bg-red-50 text-red-800 border border-red-200' : 'bg-green-50 text-green-800 border border-green-200'
    }`;
    s.classList.remove('hidden');
    setTimeout(() => s.classList.add('hidden'), 4000);
  };

  // Añadir/eliminar filas de ingrediente
  const addIngredientRow = () => {
    const fs = document.getElementById('ingredients');
    const div = document.createElement('div');
    div.className = 'ingredient bg-gray-50 rounded-xl p-3 sm:p-4 border-2 border-dashed border-gray-200 hover:border-amber-300 transition-colors';
    div.innerHTML = `
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-6 gap-3">
        <input name="ingrediente-nombre" required placeholder="Nombre del ingrediente" class="sm:col-span-2 lg:col-span-2 border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all" />
        <input name="ingrediente-cantidad-total" type="text" required placeholder="1 kg" class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all" />
        <input name="ingrediente-unidad" type="text" required placeholder="g, kg, ml" class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all" />
        <input name="ingrediente-precio" type="number" step="0.01" required placeholder="Precio Bs." class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all" />
        <div class="flex space-x-2 sm:col-span-2 lg:col-span-1">
          <input name="ingrediente-usado" type="number" step="0.01" required placeholder="Usado" class="flex-1 border border-gray-300 rounded-lg px-3 py-2 text-sm focus:border-amber-400 focus:ring-2 focus:ring-amber-100 transition-all" />
          <button type="button" class="remove w-10 h-10 bg-red-500 hover:bg-red-600 text-white rounded-lg transition-colors flex items-center justify-center" title="Eliminar ingrediente">✕</button>
        </div>
      </div>
    `;
    fs.appendChild(div);
    div.querySelector('.remove').onclick = () => div.remove();
  };

  document.addEventListener('DOMContentLoaded', () => {
    // Setup add/remove
    document.getElementById('add-ingredient').onclick = addIngredientRow;
    document.querySelectorAll('.remove')
      .forEach(btn => btn.onclick = e => e.target.closest('.ingredient').remove());

    // Submit
    document.getElementById('recipe-form').onsubmit = async e => {
      e.preventDefault();
      const form = e.target;

      const nombre = form.nombre.value.trim();
      const descripcion = form.descripcion.value.trim();
      if (!nombre || !descripcion)
        return showStatus('Faltan nombre o descripción', true);

      // Recoger ingredientes
      const ingredientes = Array.from(
        document.querySelectorAll('.ingredient')
      ).map(div => ({
        nombre: div.querySelector('[name="ingrediente-nombre"]').value.trim(),
        unidad: div.querySelector('[name="ingrediente-unidad"]').value.trim(),
        total: parseFloat(div.querySelector('[name="ingrediente-cantidad-total"]').value),
        precio: parseFloat(div.querySelector('[name="ingrediente-precio"]').value),
        usado: parseFloat(div.querySelector('[name="ingrediente-usado"]').value),
      }))
      .filter(i =>
        i.nombre &&
        i.unidad &&
        !isNaN(i.total) &&
        !isNaN(i.precio) &&
        !isNaN(i.usado) &&
        i.total > 0 &&
        i.precio > 0 &&
        i.usado > 0
      );

      if (!ingredientes.length)
        return showStatus('Agrega al menos un ingrediente válido', true);

      const payload = {
        id: slugify(nombre),
        nombre,
        descripcion,
        ingredientes
      };

      showStatus('Enviando…');
      try {
        const res = await fetch('http://192.168.1.102:5000/api/recetas', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        await res.text();

        // Forzar recarga de recetas en el Sidebar
        localStorage.removeItem('recetas');

        showStatus(`Receta "${nombre}" creada ✅`);
        form.reset();
      } catch (err) {
        console.error(err);
        showStatus(`Error: ${err.message}`, true);
      }
    };
  });
</script>
