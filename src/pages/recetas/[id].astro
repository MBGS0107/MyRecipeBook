---
export const prerender = false;
import Layout from '../../layouts/Layout.astro';
import Sidebar from '../../components/Sidebar.astro';
import Header from '../../components/Header.astro';
import Agente from '../../components/agente.astro';

const { params } = Astro;
const recetaId = params.id;
---

<Layout title={`Receta: ${recetaId} - CROQUERS`}>
  <div class="flex min-h-screen relative">
    <Sidebar />

    <!-- Main content with responsive margins -->
    <main class="flex-1 lg:ml-80 lg:mr-80 transition-all duration-300 ease-in-out">
      <div class="min-h-screen bg-gradient-to-br from-gray-50 to-white">
        <Header />
        
        <div class="container mx-auto px-4 py-8 pb-24 lg:pb-8">
          <section id="receta-content" class="space-y-8">
            <!-- Loading State -->
            <div id="loading-state" class="text-center py-12">
              <div class="inline-flex items-center justify-center w-16 h-16 bg-amber-100 rounded-full mb-4">
                <div class="w-8 h-8 border-4 border-amber-400 border-t-transparent rounded-full animate-spin"></div>
              </div>
              <h2 class="text-2xl font-bold text-gray-800 mb-2">Cargando receta...</h2>
              <p class="text-gray-600">Obteniendo informaci√≥n de ingredientes</p>
            </div>

            <!-- Content (hidden initially) -->
            <div id="receta-data" class="hidden space-y-8">
              <!-- Header -->
              <div class="bg-white rounded-2xl shadow-lg border border-gray-200 overflow-hidden">
                <div class="bg-gradient-to-r from-gray-900 to-gray-800 px-6 py-6">
                  <h2 id="receta-nombre" class="text-3xl font-bold text-white mb-2">Nombre de la receta</h2>
                  <p id="receta-descripcion" class="text-gray-300"></p>
                </div>
              </div>

              <!-- Ingredients Grid -->
              <div class="bg-white rounded-2xl shadow-lg border border-gray-200 p-6">
                <h3 class="text-2xl font-bold text-gray-800 mb-6 flex items-center space-x-2">
                  <span>ü•Ñ</span>
                  <span>Ingredientes</span>
                </h3>
                <ul id="receta-ingredientes" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <!-- Dynamic content -->
                </ul>
              </div>

              <!-- Costs Summary -->
              <div id="receta-costos" class="space-y-4">
                <!-- Dynamic content -->
              </div>

              <!-- Pricing Suggestions -->
              <div id="receta-venta" class="hidden bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-6 border border-green-200">
                <h3 class="text-xl font-bold text-green-800 mb-4 flex items-center space-x-2">
                  <span>üí∞</span>
                  <span>Precio de venta sugerido</span>
                </h3>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div class="bg-white rounded-xl p-4 border border-green-200">
                    <h4 class="font-semibold text-green-700 mb-1">Unidad</h4>
                    <p id="venta-unidad" class="text-2xl font-bold text-green-800"></p>
                  </div>
                  <div class="bg-white rounded-xl p-4 border border-green-200">
                    <h4 class="font-semibold text-green-700 mb-1">Paquete de 4</h4>
                    <p id="venta-paquete4" class="text-2xl font-bold text-green-800"></p>
                  </div>
                  <div class="bg-white rounded-xl p-4 border border-green-200">
                    <h4 class="font-semibold text-green-700 mb-1">Paquete de 6</h4>
                    <p id="venta-paquete6" class="text-2xl font-bold text-green-800"></p>
                  </div>
                </div>
                <p id="venta-info" class="text-sm text-green-600 mt-4 bg-green-100 rounded-lg p-3"></p>
              </div>

              <!-- Tips -->
              <aside id="receta-tips" class="hidden bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-6 border-l-4 border-blue-400">
                <div class="flex items-start space-x-3">
                  <span class="text-2xl">üí°</span>
                  <div>
                    <h4 class="font-semibold text-blue-800 mb-2">Tip Profesional</h4>
                    <p class="text-blue-700">Si el costo sugerido tienen decimales, redondea a un numero entero mayor al actual.</p>
                  </div>
                </div>
              </aside>

              <!-- Navigation -->
              <div class="flex flex-col sm:flex-row gap-4 pt-6">
                <a href="/" class="inline-flex items-center justify-center px-6 py-3 bg-gradient-to-r from-gray-900 to-gray-800 text-white rounded-xl font-semibold hover:from-gray-800 hover:to-gray-700 transition-all shadow-lg hover:shadow-xl">
                  <span class="mr-2">‚Üê</span>
                  Volver al inicio
                </a>
                <button onclick="window.print()" class="inline-flex items-center justify-center px-6 py-3 bg-amber-500 hover:bg-amber-600 text-white rounded-xl font-semibold transition-all shadow-lg hover:shadow-xl">
                  <span class="mr-2">üñ®Ô∏è</span>
                  Imprimir receta
                </button>
              </div>
            </div>

            <!-- Error State -->
            <div id="error-state" class="hidden text-center py-12">
              <div class="inline-flex items-center justify-center w-16 h-16 bg-red-100 rounded-full mb-4">
                <span class="text-red-600 text-2xl">‚ö†Ô∏è</span>
              </div>
              <h2 class="text-2xl font-bold text-red-800 mb-2">Receta no encontrada</h2>
              <p class="text-red-600 mb-6">No se pudo cargar la informaci√≥n de esta receta.</p>
              <a href="/" class="inline-flex items-center px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-xl font-semibold transition-all">
                <span class="mr-2">‚Üê</span>
                Volver al inicio
              </a>
            </div>
          </section>
        </div>
      </div>
    </main>

    <!-- Chat Agent - Ahora visible en todas las pantallas -->
    <Agente />
  </div>
</Layout>

<script is:inline define:vars={{ recetaId }}>
  document.addEventListener('DOMContentLoaded', () => {
    const loadingState = document.getElementById('loading-state');
    const recetaData = document.getElementById('receta-data');
    const errorState = document.getElementById('error-state');

    // Show loading initially
    setTimeout(() => {
      try {
        const recetas = JSON.parse(localStorage.getItem('recetas') || '[]');
        const receta = recetas.find(r => r.id === recetaId);

        if (!receta) {
          showError();
          return;
        }

        showRecetaData(receta);
      } catch (error) {
        console.error('Error loading recipe:', error);
        showError();
      }
    }, 1500); // Simulate loading time

    function showError() {
      loadingState.classList.add('hidden');
      errorState.classList.remove('hidden');
    }

    function showRecetaData(receta) {
      loadingState.classList.add('hidden');
      recetaData.classList.remove('hidden');

      // Update content
      document.getElementById('receta-nombre').textContent = receta.nombre;
      if (receta.descripcion) {
        document.getElementById('receta-descripcion').textContent = receta.descripcion;
      }

      // Calculate costs
      let costo10 = 0;
      const ingredientesHTML = receta.ingredientes.map(item => {
        const usado = parseFloat(item.usado);
        const total = parseFloat(item.total);
        const precio = parseFloat(item.precio);
        const unitCost = precio / total;
        const costUsed = unitCost * usado;
        costo10 += costUsed;

        return `
          <li class="bg-gradient-to-br from-gray-50 to-white rounded-xl p-4 border border-gray-200 hover:shadow-md transition-shadow">
            <div class="flex items-start space-x-3">
              <span class="text-2xl">üßÑ</span>
              <div class="flex-1">
                <h4 class="font-semibold text-gray-800 mb-1">${item.nombre}</h4>
                <p class="text-sm text-gray-600 mb-1">Precio base: Bs ${unitCost.toFixed(2)} / ${item.unidad || 'unidad'}</p>
                <p class="text-sm font-medium text-amber-600">Costo ${usado}${item.unidad}: Bs ${costUsed.toFixed(2)}</p>
              </div>
            </div>
          </li>
        `;
      }).join('');

      document.getElementById('receta-ingredientes').innerHTML = ingredientesHTML;

      const costPerUnit = costo10 / 10;
      renderCosts(costo10, costPerUnit);
      suggestPricing(costPerUnit);
      
      // Show tips
      document.getElementById('receta-tips').classList.remove('hidden');
    }

    function renderCosts(costo10, costPerUnit) {
      const costosEl = document.getElementById('receta-costos');
      costosEl.innerHTML = `
        <div class="bg-gradient-to-br from-amber-50 to-yellow-50 rounded-2xl p-6 border border-amber-200">
          <h3 class="text-xl font-bold text-amber-800 mb-4 flex items-center space-x-2">
            <span>üìä</span>
            <span>Resumen de costos</span>
          </h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div class="bg-white rounded-xl p-4 border border-amber-200">
              <h4 class="font-semibold text-amber-700 mb-1">Costo total (10 unidades)</h4>
              <p class="text-2xl font-bold text-amber-800">Bs ${costo10.toFixed(2)}</p>
            </div>
            <div class="bg-white rounded-xl p-4 border border-amber-200">
              <h4 class="font-semibold text-amber-700 mb-1">Costo unitario</h4>
              <p class="text-2xl font-bold text-amber-800">Bs ${costPerUnit.toFixed(2)}</p>
            </div>
          </div>
        </div>
      `;
    }

    function suggestPricing(costPerUnit) {
      const chocolateCost = 1.75;
      const chocolateSaleMin = 6;
      const factor = chocolateSaleMin / chocolateCost;

      const saleUnit = costPerUnit * factor;
      const sale4 = saleUnit * 4;
      const sale6 = saleUnit * 6;

      document.getElementById('venta-unidad').textContent = `Bs ${saleUnit.toFixed(2)}`;
      document.getElementById('venta-paquete4').textContent = `Bs ${sale4.toFixed(2)}`;
      document.getElementById('venta-paquete6').textContent = `Bs ${sale6.toFixed(2)}`;
      document.getElementById('venta-info').textContent = `Factor de venta aplicado: ${factor.toFixed(2)}x | Margen de ganancia recomendado incluido`;

      document.getElementById('receta-venta').classList.remove('hidden');
    }
  });
</script>
