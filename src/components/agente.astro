---
// src/components/Agente.astro
const BACKEND_URL = import.meta.env.BACKEND_URL || 'http://127.0.0.1:3000';
---

<!-- Botón flotante para mobile -->
<button 
  id="agent-toggle-btn" 
  class="lg:hidden fixed bottom-20 right-4 w-14 h-14 bg-gradient-to-r from-amber-500 to-yellow-500 text-gray-900 rounded-full shadow-2xl z-50 flex items-center justify-center hover:scale-110 transition-all duration-300 border-2 border-white"
>
  <span class="text-xl animate-pulse">🤖</span>
  <div class="absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full animate-ping"></div>
  <div class="absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full"></div>
</button>

<!-- Modal para mobile -->
<div id="agent-modal" class="lg:hidden fixed inset-0 bg-black/60 backdrop-blur-md z-50 hidden">
  <div class="absolute bottom-0 left-0 right-0 bg-white rounded-t-3xl max-h-[90vh] flex flex-col animate-slide-up shadow-2xl">
    <!-- Header del modal -->
    <header class="bg-gradient-to-r from-amber-500 via-yellow-500 to-amber-600 text-gray-900 p-4 rounded-t-3xl relative overflow-hidden">
      <div class="relative z-10">
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-3">
            <div class="w-12 h-12 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center shadow-lg">
              <span class="text-gray-900 text-xl">🤖</span>
            </div>
            <div>
              <h3 class="font-bold text-lg text-gray-900">Asistente IA</h3>
              <p class="text-gray-800 text-xs font-medium">Especialista en Ventas</p>
            </div>
          </div>
          <button id="close-modal-btn" class="bg-white/20 backdrop-blur-sm text-gray-900 hover:bg-white/30 transition-colors p-2 rounded-full">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
      </div>
      <!-- Decorative elements -->
      <div class="absolute top-0 right-0 w-24 h-24 bg-white opacity-10 rounded-full -translate-y-12 translate-x-12"></div>
      <div class="absolute bottom-0 left-0 w-20 h-20 bg-gray-900 opacity-5 rounded-full translate-y-10 -translate-x-10"></div>
    </header>    <!-- Messages area mobile -->
    <div id="chat-messages-mobile" class="flex-1 p-4 overflow-y-auto space-y-3 bg-gradient-to-b from-gray-50 via-white to-gray-50 min-h-0">
      <!-- Welcome message -->
      <div class="flex justify-start">
        <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border-l-4 border-blue-400 rounded-r-2xl px-4 py-3 max-w-[85%] shadow-sm">
          <p class="text-gray-800 text-sm leading-relaxed">
            ¡Hola! 👋 Soy tu <strong>asistente IA especializado</strong> en repostería. 
            <br><br>
            <strong>Pregúntame sobre:</strong>
            <br>• 💰 <span class="font-semibold text-green-600">Precios y costos</span>
            <br>• 📊 <span class="font-semibold text-blue-600">Análisis de rentabilidad</span>
            <br>• 🧁 <span class="font-semibold text-purple-600">Sugerencias de recetas</span>
            <br>• 📈 <span class="font-semibold text-orange-600">Estrategias de ventas</span>
          </p>
        </div>
      </div>
    </div>    <!-- Input form mobile -->
    <form id="chat-form-mobile" class="p-4 border-t border-gray-200 bg-gradient-to-r from-gray-50 to-white rounded-b-3xl">
      <div class="flex space-x-3">
        <div class="flex-1 relative">
          <input
            id="chat-input-mobile"
            type="text"
            placeholder="¿Preguntas sobre precios o recetas?"
            class="w-full border-2 border-gray-200 rounded-xl px-4 py-3 pr-12 focus:border-amber-400 focus:ring-4 focus:ring-amber-100 transition-all duration-200 text-sm bg-white shadow-sm"
            required
          />
          <div class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400">
            💬
          </div>
        </div>
        <button 
          type="submit" 
          class="bg-gradient-to-r from-amber-500 to-yellow-500 hover:from-amber-600 hover:to-yellow-600 text-gray-900 px-6 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl flex items-center space-x-2"
        >
          <span>Enviar</span>
          <span class="text-gray-700">✨</span>
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Sidebar para desktop -->
<aside class="hidden lg:flex fixed right-0 top-0 h-full w-80 bg-white shadow-2xl border-l-4 border-amber-200 flex-col z-30">
  <!-- Header del chat -->
  <header class="bg-gradient-to-r from-amber-500 via-yellow-500 to-amber-600 text-gray-900 p-4 relative overflow-hidden">
    <div class="relative z-10">
      <div class="flex items-center space-x-3">
        <div class="w-12 h-12 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center shadow-lg">
          <span class="text-gray-900 text-xl">🤖</span>
        </div>
        <div>
          <h3 class="font-bold text-lg text-gray-900">Asistente IA</h3>
          <p class="text-gray-800 text-xs font-medium">Especialista en Ventas</p>
        </div>
      </div>
    </div>
    
    <!-- Decorative elements -->
    <div class="absolute top-0 right-0 w-24 h-24 bg-white opacity-10 rounded-full -translate-y-12 translate-x-12"></div>
    <div class="absolute bottom-0 left-0 w-20 h-20 bg-gray-900 opacity-5 rounded-full translate-y-10 -translate-x-10"></div>
  </header>

  <!-- Messages area desktop -->
  <div id="chat-messages" class="flex-1 p-4 overflow-y-auto space-y-3 bg-gradient-to-b from-gray-50 via-white to-gray-50">
    <!-- Welcome message -->
    <div class="flex justify-start">
      <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border-l-4 border-blue-400 rounded-r-2xl px-4 py-3 max-w-[85%] shadow-sm">
        <p class="text-gray-800 text-sm leading-relaxed">
          ¡Hola! 👋 Soy tu <strong>asistente IA especializado</strong> en repostería. 
          <br><br>
          <strong>Pregúntame sobre:</strong>
          <br>• 💰 <span class="font-semibold text-green-600">Precios y costos</span>
          <br>• 📊 <span class="font-semibold text-blue-600">Análisis de rentabilidad</span>
          <br>• 🧁 <span class="font-semibold text-purple-600">Sugerencias de recetas</span>  
          <br>• 📈 <span class="font-semibold text-orange-600">Estrategias de ventas</span>
        </p>
      </div>
    </div>
  </div>

  <!-- Input form desktop -->
  <form id="chat-form" class="p-4 border-t border-gray-200 bg-gradient-to-r from-gray-50 to-white">
    <div class="flex space-x-3">
      <div class="flex-1 relative">
        <input
          id="chat-input"
          type="text"
          placeholder="¿Preguntas sobre precios o recetas?"
          class="w-full border-2 border-gray-200 rounded-xl px-4 py-3 pr-12 focus:border-amber-400 focus:ring-4 focus:ring-amber-100 transition-all duration-200 text-sm bg-white shadow-sm"
          required
        />
        <div class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400">
          💬
        </div>
      </div>
      <button 
        type="submit" 
        class="bg-gradient-to-r from-amber-500 to-yellow-500 hover:from-amber-600 hover:to-yellow-600 text-gray-900 px-6 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl flex items-center space-x-2"
      >
        <span>Enviar</span>
        <span class="text-gray-700">✨</span>
      </button>
    </div>
  </form>
</aside>

<style>
  @keyframes slide-up {
    from {
      transform: translateY(100%);
    }
    to {
      transform: translateY(0);
    }
  }
  
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-up {
    animation: slide-up 0.3s ease-out;
  }
  
  .animate-fade-in {
    animation: fade-in 0.3s ease-out;
  }
  
  /* Mejorar el scroll de los mensajes */
  #chat-messages::-webkit-scrollbar,
  #chat-messages-mobile::-webkit-scrollbar {
    width: 6px;
  }
  
  #chat-messages::-webkit-scrollbar-track,
  #chat-messages-mobile::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 3px;
  }
  
  #chat-messages::-webkit-scrollbar-thumb,
  #chat-messages-mobile::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 3px;
  }
  
  #chat-messages::-webkit-scrollbar-thumb:hover,
  #chat-messages-mobile::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
  
  /* Efecto de pulso en el botón */
  @keyframes pulse-ring {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    100% {
      transform: scale(1.3);
      opacity: 0;
    }
  }
  
  #agent-toggle-btn::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border-radius: 50%;
    background: linear-gradient(45deg, #f59e0b, #eab308);
    animation: pulse-ring 2s infinite;
    z-index: -1;
  }
</style>

<script is:inline define:vars={{ BACKEND_URL }}>
  document.addEventListener('DOMContentLoaded', () => {
    // Referencias a elementos
    const messagesEl = document.getElementById('chat-messages');
    const messagesMobileEl = document.getElementById('chat-messages-mobile');
    const form = document.getElementById('chat-form');
    const formMobile = document.getElementById('chat-form-mobile');
    const input = document.getElementById('chat-input');
    const inputMobile = document.getElementById('chat-input-mobile');
    const agentToggleBtn = document.getElementById('agent-toggle-btn');
    const agentModal = document.getElementById('agent-modal');
    const closeModalBtn = document.getElementById('close-modal-btn');

    // Control del modal para mobile
    const openModal = () => {
      agentModal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
      // Pequeño delay para que la animación se vea bien
      setTimeout(() => {
        inputMobile?.focus();
      }, 300);
    };

    const closeModal = () => {
      agentModal.classList.add('hidden');
      document.body.style.overflow = '';
    };

    agentToggleBtn?.addEventListener('click', openModal);
    closeModalBtn?.addEventListener('click', closeModal);
    
    // Cerrar modal al hacer click fuera
    agentModal?.addEventListener('click', (e) => {
      if (e.target === agentModal) {
        closeModal();
      }
    });

    // Cerrar modal con ESC
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !agentModal?.classList.contains('hidden')) {
        closeModal();
      }
    });    // Función para interpretar LaTeX/Markdown básico
    const formatMessage = (text) => {
      return text
        // Convertir **texto** a <strong>texto</strong>
        .replace(/\*\*(.*?)\*\*/g, '<strong class="font-bold text-gray-900 bg-amber-50 px-1 rounded">$1</strong>')
        // Convertir *texto* a <em>texto</em>
        .replace(/(?<!\*)\*([^*]+)\*(?!\*)/g, '<em class="italic text-gray-700">$1</em>')
        // Convertir saltos de línea a <br>
        .replace(/\n/g, '<br>')
        // Mejorar formato de números con moneda Bs
        .replace(/(Bs\s*[\d.,]+)/g, '<span class="font-bold text-green-700 bg-green-100 px-2 py-1 rounded-md border border-green-200 inline-block">$1</span>')
        // Mejorar formato de números con %
        .replace(/(\d+\.?\d*%)/g, '<span class="font-semibold text-blue-700 bg-blue-100 px-2 py-1 rounded">$1</span>')
        // Destacar cantidades y medidas
        .replace(/(\d+\s*unidades?)/gi, '<span class="font-semibold text-purple-700 bg-purple-100 px-2 py-1 rounded">$1</span>')
        .replace(/(\d+\s*paquetes?)/gi, '<span class="font-semibold text-purple-700 bg-purple-100 px-2 py-1 rounded">$1</span>')
        // Mejorar listas con bullets (•)
        .replace(/•\s*([^<\n]+)/g, '<div class="flex items-start space-x-2 my-1"><span class="text-amber-600 font-bold text-lg">•</span><span>$1</span></div>')
        // Destacar preguntas (líneas que terminan con ?)
        .replace(/([^<>\n]*\?)/g, '<span class="text-blue-800 font-medium">$1</span>');
    };

    const appendMessage = (text, from, isDesktop = true) => {
      const targetMessages = isDesktop ? messagesEl : messagesMobileEl;
      if (!targetMessages) return;
      
      const msg = document.createElement('div');
      msg.className = from === 'user' ? 'flex justify-end' : 'flex justify-start';
      
      const bubble = document.createElement('div');
      bubble.className = from === 'user' 
        ? 'bg-gradient-to-r from-gray-900 to-gray-800 text-white rounded-2xl rounded-tr-sm px-4 py-3 max-w-[85%] shadow-lg'
        : 'bg-white border border-gray-200 text-gray-800 rounded-2xl rounded-tl-sm px-4 py-3 max-w-[85%] shadow-sm';
        // Aplicar formato especial a mensajes del bot
      const formattedText = from === 'bot' ? formatMessage(text) : text;
      bubble.innerHTML = `<div class="text-sm leading-relaxed">${formattedText}</div>`;
      
      msg.appendChild(bubble);
      msg.classList.add('animate-fade-in');
      targetMessages.appendChild(msg);
      targetMessages.scrollTop = targetMessages.scrollHeight;
    };

    const handleSubmit = async (e, isDesktop = true) => {
      e.preventDefault();
      const targetInput = isDesktop ? input : inputMobile;
      const targetMessages = isDesktop ? messagesEl : messagesMobileEl;
      
      if (!targetInput || !targetMessages) return;
      
      const question = targetInput.value.trim();
      if (!question) return;
      
      appendMessage(question, 'user', isDesktop);
      targetInput.value = '';

      // Loading message with animation
      const loadingMsg = document.createElement('div');
      loadingMsg.className = 'flex justify-start';
      loadingMsg.innerHTML = `
        <div class="bg-white border border-gray-200 text-gray-800 rounded-2xl rounded-tl-sm px-4 py-3 max-w-[85%] shadow-sm">
          <div class="flex items-center space-x-2">
            <div class="flex space-x-1">
              <div class="w-2 h-2 bg-amber-400 rounded-full animate-bounce"></div>
              <div class="w-2 h-2 bg-amber-400 rounded-full animate-bounce" style="animation-delay: 0.1s"></div>
              <div class="w-2 h-2 bg-amber-400 rounded-full animate-bounce" style="animation-delay: 0.2s"></div>
            </div>
            <span class="text-sm text-gray-600">Consultando con IA...</span>
          </div>
        </div>
      `;
      targetMessages.appendChild(loadingMsg);
      targetMessages.scrollTop = targetMessages.scrollHeight;

      try {
        // Obtener datos cacheados si existen
        const cachedRecipeData = localStorage.getItem('chocolate_receta_cache');
        const recipeData = cachedRecipeData ? JSON.parse(cachedRecipeData) : null;
        
        const requestBody = { 
          recetaId: window.location.pathname.split('/').pop(), 
          question,
          cachedData: recipeData // Pasar datos cacheados como contexto
        };
        
        console.log('📤 Enviando solicitud a IA con datos:', {
          recetaId: requestBody.recetaId,
          question: requestBody.question,
          hasCachedData: !!recipeData
        });

        const resp = await fetch(`http://192.168.1.102:5000/api/chat-venta`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(requestBody)
        });
        
        if (!resp.ok) {
          throw new Error(`HTTP error! status: ${resp.status}`);
        }
        
        const { answer } = await resp.json();
        
        // Remove loading message
        targetMessages.removeChild(loadingMsg);
        appendMessage(answer, 'bot', isDesktop);
      } catch (err) {
        console.error('❌ Error en chat:', err);
        targetMessages.removeChild(loadingMsg);
        appendMessage('❌ Lo siento, hubo un error al procesar tu consulta. Por favor intenta nuevamente.', 'bot', isDesktop);
      }
    };

    // Event listeners para formularios
    form?.addEventListener('submit', (e) => handleSubmit(e, true));
    formMobile?.addEventListener('submit', (e) => handleSubmit(e, false));

    // Auto-focus input en desktop
    input?.focus();
  });
</script>
