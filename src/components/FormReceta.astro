---
// src/components/FormReceta.astro
const BACKEND_URL = import.meta.env.BACKEND_URL || 'http://127.0.0.1:3000';
---
<div class="min-h-screen bg-gradient-to-br from-orange-50 via-amber-50 to-yellow-50 py-4 sm:py-8 relative overflow-hidden">
  <!-- Background decoration -->
  <div class="absolute inset-0 opacity-30">
    <div class="absolute inset-0 bg-gradient-to-br from-orange-100/20 to-amber-100/20"></div>
    <div class="absolute top-0 left-0 w-full h-full" style="background-image: radial-gradient(circle at 25% 25%, rgba(251, 146, 60, 0.1) 0%, transparent 50%), radial-gradient(circle at 75% 75%, rgba(245, 158, 11, 0.1) 0%, transparent 50%);"></div>
  </div>
  
  <div class="max-w-5xl mx-auto px-3 sm:px-4 relative">
    <form id="recipe-form" class="bg-white/80 backdrop-blur-sm rounded-2xl sm:rounded-3xl shadow-2xl border border-orange-200/50 overflow-hidden transform hover:scale-[1.01] transition-all duration-300">
      <!-- Header del formulario -->
      <div class="bg-gradient-to-r from-orange-600 via-amber-600 to-yellow-600 px-4 sm:px-8 py-6 sm:py-8 relative overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-r from-orange-500/20 to-yellow-500/20"></div>
        <div class="flex items-center space-x-4 relative z-10">
          <div class="w-12 h-12 sm:w-16 sm:h-16 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center shadow-lg">
            <span class="text-white text-2xl sm:text-3xl drop-shadow-sm">üë®‚Äçüç≥</span>
          </div>
          <div>
            <h2 class="text-2xl sm:text-3xl font-bold text-white drop-shadow-sm">Crear Nueva Receta</h2>
            <p class="text-orange-100 text-sm sm:text-base mt-1">Dise√±a tu pr√≥xima creaci√≥n culinaria con estilo</p>
          </div>
        </div>
        <!-- Decorative elements -->
        <div class="absolute top-4 right-4 w-8 h-8 bg-white/10 rounded-full"></div>
        <div class="absolute bottom-4 right-8 w-6 h-6 bg-white/10 rounded-full"></div>
        <div class="absolute top-8 right-16 w-4 h-4 bg-white/10 rounded-full"></div>
      </div>      <div class="p-6 sm:p-10 space-y-8 sm:space-y-10">
        <!-- Descripci√≥n general -->
        <div class="space-y-3 group">
          <label for="descripcion" class="block text-sm font-bold text-gray-800 flex items-center space-x-3">
            <div class="w-8 h-8 bg-gradient-to-br from-orange-400 to-amber-500 rounded-xl flex items-center justify-center text-white shadow-lg">
              <span class="text-lg">üìù</span>
            </div>
            <span>Descripci√≥n de la receta</span>
          </label>
          <div class="relative">
            <textarea
              id="descripcion"
              name="descripcion"
              rows="4"
              class="w-full border-2 border-orange-200 rounded-2xl px-4 sm:px-6 py-3 sm:py-4 focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 resize-none text-sm bg-gradient-to-br from-white to-orange-50/30 shadow-inner placeholder-gray-400"
              placeholder="Describe tu deliciosa creaci√≥n... ¬øQu√© la hace especial? ¬øCu√°l es su historia?"
              required
            ></textarea>
            <div class="absolute bottom-3 right-3 text-xs text-gray-400 opacity-0 group-focus-within:opacity-100 transition-opacity">
              ‚ú® S√© creativo
            </div>
          </div>
        </div>

        <!-- Nombre -->
        <div class="space-y-3 group">
          <label for="nombre" class="block text-sm font-bold text-gray-800 flex items-center space-x-3">
            <div class="w-8 h-8 bg-gradient-to-br from-amber-400 to-yellow-500 rounded-xl flex items-center justify-center text-white shadow-lg">
              <span class="text-lg">üè∑Ô∏è</span>
            </div>
            <span>Nombre de la receta</span>
          </label>
          <div class="relative">
            <input
              id="nombre"
              name="nombre"
              required
              class="w-full border-2 border-orange-200 rounded-2xl px-4 sm:px-6 py-3 sm:py-4 focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 text-sm bg-gradient-to-br from-white to-orange-50/30 shadow-inner placeholder-gray-400"
              placeholder="Ej: Brownie de chocolate premium con nueces"
            />
            <div class="absolute right-3 top-1/2 transform -translate-y-1/2 text-orange-300 opacity-0 group-focus-within:opacity-100 transition-opacity">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" clip-rule="evenodd" />
              </svg>
            </div>
          </div>
        </div>        <!-- Ingredientes -->
        <div class="space-y-6">
          <div class="flex items-center justify-between">
            <div>
              <h3 class="text-lg sm:text-xl font-bold text-gray-800 flex items-center space-x-3">
                <div class="w-10 h-10 bg-gradient-to-br from-green-400 to-emerald-500 rounded-xl flex items-center justify-center text-white shadow-lg">
                  <span class="text-xl">ü•Ñ</span>
                </div>
                <span>Ingredientes</span>
              </h3>
              <p class="text-sm text-gray-600 mt-2 ml-13">
                Especifica todos los detalles: cantidad total, unidad, precio total (Bs.) y cantidad para 10 unidades
              </p>
            </div>
          </div>

          <fieldset id="ingredients" class="space-y-4">
            <!-- Fila de ejemplo -->
            <div class="ingredient bg-gradient-to-br from-orange-50 to-amber-50 rounded-2xl p-4 sm:p-6 border-2 border-dashed border-orange-200 hover:border-orange-300 hover:shadow-lg transition-all duration-300 group">
              <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-6 gap-4">
                <input
                  name="ingrediente-nombre"
                  required
                  placeholder="Nombre del ingrediente"
                  class="sm:col-span-2 lg:col-span-2 border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400"
                />
                <input
                  name="ingrediente-cantidad-total"
                  type="text"
                  required
                  placeholder="Ej: 1 kg"
                  class="border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400"
                />
                <input
                  name="ingrediente-unidad"
                  type="text"
                  required
                  placeholder="g, kg, ml, etc."
                  class="border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400"
                />
                <input
                  name="ingrediente-precio"
                  type="number"
                  step="0.01"
                  required
                  placeholder="Precio Bs."
                  class="border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400"
                />
                <div class="flex items-center gap-2 sm:col-span-2 lg:col-span-1 min-w-0">
                  <input
                    name="ingrediente-usado"
                    type="number"
                    step="0.01"
                    required
                    placeholder="Usado"
                    class="w-full min-w-0 max-w-[120px] border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400"
                  />
                  <button
                    type="button"
                    class="remove w-12 h-12 bg-gradient-to-br from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white rounded-xl transition-all duration-300 flex items-center justify-center shadow-lg hover:shadow-xl transform hover:scale-105"
                    title="Eliminar ingrediente"
                  >
                    <span class="text-lg">‚úï</span>
                  </button>
                </div>
              </div>
            </div>
          </fieldset>

          <button
            type="button"
            id="add-ingredient"
            class="w-full bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 hover:from-green-600 hover:via-emerald-600 hover:to-teal-600 text-white py-4 px-6 rounded-2xl font-bold transition-all duration-300 flex items-center justify-center space-x-3 shadow-lg hover:shadow-xl transform hover:scale-[1.02] text-sm sm:text-base group"
          >
            <div class="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center group-hover:rotate-90 transition-transform duration-300">
              <span class="text-xl font-bold">+</span>
            </div>
            <span>Agregar Ingrediente</span>
          </button>
        </div>        <!-- Botones de acci√≥n -->
        <div class="flex flex-col sm:flex-row gap-4 pt-8 border-t border-orange-200/50">
          <button 
            type="submit" 
            class="flex-1 bg-gradient-to-r from-orange-600 via-amber-600 to-yellow-600 hover:from-orange-700 hover:via-amber-700 hover:to-yellow-700 text-white py-4 sm:py-5 px-6 sm:px-8 rounded-2xl font-bold transition-all duration-300 flex items-center justify-center space-x-3 shadow-xl hover:shadow-2xl transform hover:scale-[1.02] text-base sm:text-lg group"
          >
            <div class="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
              <span class="text-2xl">üéÇ</span>
            </div>
            <span>Crear Receta</span>
          </button>
          <button 
            type="reset" 
            class="flex-1 sm:flex-none sm:w-auto bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700 text-white py-4 sm:py-5 px-6 sm:px-8 rounded-2xl font-semibold transition-all duration-300 flex items-center justify-center space-x-3 shadow-lg hover:shadow-xl transform hover:scale-[1.02] text-base sm:text-lg group"
          >
            <div class="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center group-hover:rotate-12 transition-transform duration-300">
              <span class="text-xl">üóëÔ∏è</span>
            </div>
            <span>Limpiar</span>
          </button>
        </div>

        <div id="form-status" class="hidden mt-6 p-4 rounded-2xl text-sm font-medium shadow-lg"></div>
      </div>
    </form>
  </div>
</div>

<style>
  /* Custom animations and enhancements */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }
  
  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 20px rgba(251, 146, 60, 0.3); }
    50% { box-shadow: 0 0 30px rgba(251, 146, 60, 0.5); }
  }
  
  .ingredient:hover {
    animation: float 3s ease-in-out infinite;
  }
  
  button[type="submit"]:hover {
    animation: pulse-glow 2s ease-in-out infinite;
  }
  
  /* Custom focus styles */
  input:focus, textarea:focus {
    transform: translateY(-2px);
  }
  
  /* Smooth transitions for all interactive elements */
  * {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Beautiful scrollbar */
  textarea::-webkit-scrollbar {
    width: 8px;
  }
  
  textarea::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 10px;
  }
  
  textarea::-webkit-scrollbar-thumb {
    background: linear-gradient(to bottom, #fb923c, #f59e0b);
    border-radius: 10px;
  }
  
  textarea::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(to bottom, #ea580c, #d97706);
  }
</style>

<script type="module" define:vars={{ BACKEND_URL }}>
  // Helpers
  const slugify = txt =>
    txt.trim().toLowerCase()
      .normalize('NFD').replace(/[\u0300-\u036f]/g, '')
      .replace(/[^\w\s-]/g, '').replace(/\s+/g, '-');
  const showStatus = (msg, isErr = false) => {
    const s = document.getElementById('form-status');
    s.textContent = msg;
    s.className = `mt-6 p-4 rounded-2xl text-sm font-medium shadow-lg ${
      isErr ? 'bg-red-50 text-red-800 border border-red-200' : 'bg-green-50 text-green-800 border border-green-200'
    }`;
    s.classList.remove('hidden');
    setTimeout(() => s.classList.add('hidden'), 5000);
  };

  // A√±adir/eliminar filas de ingrediente
  const addIngredientRow = () => {
    const fs = document.getElementById('ingredients');
    const div = document.createElement('div');
    div.className = 'ingredient bg-gradient-to-br from-orange-50 to-amber-50 rounded-2xl p-4 sm:p-6 border-2 border-dashed border-orange-200 hover:border-orange-300 hover:shadow-lg transition-all duration-300 group';
    div.innerHTML = `
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-6 gap-4">
        <input name="ingrediente-nombre" required placeholder="Nombre del ingrediente" class="sm:col-span-2 lg:col-span-2 border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400" />
        <input name="ingrediente-cantidad-total" type="text" required placeholder="Ej: 1 kg" class="border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400" />
        <input name="ingrediente-unidad" type="text" required placeholder="g, kg, ml, etc." class="border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400" />
        <input name="ingrediente-precio" type="number" step="0.01" required placeholder="Precio Bs." class="border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400" />
        <div class="flex items-center gap-2 sm:col-span-2 lg:col-span-1 min-w-0">
          <input name="ingrediente-usado" type="number" step="0.01" required placeholder="Usado" class="w-full min-w-0 max-w-[120px] border-2 border-orange-200 rounded-xl px-4 py-3 text-sm focus:border-orange-400 focus:ring-4 focus:ring-orange-100 transition-all duration-300 bg-white/70 placeholder-gray-400" />
          <button type="button" class="remove w-12 h-12 bg-gradient-to-br from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white rounded-xl transition-all duration-300 flex items-center justify-center shadow-lg hover:shadow-xl transform hover:scale-105" title="Eliminar ingrediente"><span class="text-lg">‚úï</span></button>
        </div>
      </div>
    `;
    fs.appendChild(div);
    div.querySelector('.remove').onclick = () => div.remove();
  };

  document.addEventListener('DOMContentLoaded', () => {
    // Setup add/remove
    document.getElementById('add-ingredient').onclick = addIngredientRow;
    document.querySelectorAll('.remove')
      .forEach(btn => btn.onclick = e => e.target.closest('.ingredient').remove());    // Submit
    document.getElementById('recipe-form').onsubmit = async e => {
      e.preventDefault();
      const form = e.target;
      const submitBtn = form.querySelector('button[type="submit"]');
      const originalBtnContent = submitBtn.innerHTML;

      const nombre = form.nombre.value.trim();
      const descripcion = form.descripcion.value.trim();
      if (!nombre || !descripcion)
        return showStatus('üìù Por favor completa el nombre y la descripci√≥n', true);

      // Recoger ingredientes
      const ingredientes = Array.from(
        document.querySelectorAll('.ingredient')
      ).map(div => ({
        nombre: div.querySelector('[name="ingrediente-nombre"]').value.trim(),
        unidad: div.querySelector('[name="ingrediente-unidad"]').value.trim(),
        total: parseFloat(div.querySelector('[name="ingrediente-cantidad-total"]').value),
        precio: parseFloat(div.querySelector('[name="ingrediente-precio"]').value),
        usado: parseFloat(div.querySelector('[name="ingrediente-usado"]').value),
      }))
      .filter(i =>
        i.nombre &&
        i.unidad &&
        !isNaN(i.total) &&
        !isNaN(i.precio) &&
        !isNaN(i.usado) &&
        i.total > 0 &&
        i.precio > 0 &&
        i.usado > 0
      );

      if (!ingredientes.length)
        return showStatus('ü•Ñ Agrega al menos un ingrediente v√°lido', true);

      const payload = {
        id: slugify(nombre),
        nombre,
        descripcion,
        ingredientes
      };

      // Loading state
      submitBtn.innerHTML = `
        <div class="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center">
          <div class="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
        </div>
        <span>Creando receta...</span>
      `;
      submitBtn.disabled = true;
      submitBtn.classList.add('opacity-75', 'cursor-not-allowed');

      try {
        const res = await fetch('http://192.168.1.102:5000/api/recetas', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        await res.text();

        // Forzar recarga de recetas en el Sidebar
        localStorage.removeItem('recetas');

        showStatus(`üéâ ¬°Receta "${nombre}" creada exitosamente!`);
        form.reset();
        
        // Success animation
        submitBtn.innerHTML = `
          <div class="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center">
            <span class="text-2xl">‚úÖ</span>
          </div>
          <span>¬°Creada!</span>
        `;
        
        // Reset button after delay
        setTimeout(() => {
          submitBtn.innerHTML = originalBtnContent;
          submitBtn.disabled = false;
          submitBtn.classList.remove('opacity-75', 'cursor-not-allowed');
        }, 2000);
        
      } catch (err) {
        console.error(err);
        showStatus(`‚ùå Error: ${err.message}`, true);
        
        // Reset button on error
        submitBtn.innerHTML = originalBtnContent;
        submitBtn.disabled = false;
        submitBtn.classList.remove('opacity-75', 'cursor-not-allowed');
      }
    };
  });
</script>
